plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
archivesBaseName = 'hola-api-deploy'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2020.0.2")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.flywaydb:flyway-mysql'
    implementation 'mysql:mysql-connector-java:8.0.29'
    implementation 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testCompileOnly 'org.projectlombok:lombok'
    implementation group: 'org.javassist', name: 'javassist', version: '3.15.0-GA'
    implementation 'junit:junit:4.13.1'
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.3'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.1'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.1', 'io.jsonwebtoken:jjwt-jackson:0.11.1'
    implementation group: 'commons-io', name: 'commons-io', version: '2.7'
    implementation 'ch.qos.logback:logback-classic:1.2.9'
    implementation 'ch.qos.logback:logback-core:1.2.9'
    implementation 'org.json:json:20220924'
}

//sourceSets {
//    main {
//        resources {
//            srcDirs("src/main/resources")
//        }
//    }
//}

jar {
    enabled = false
}

bootRun {
    String activeProfile = System.properties['--spring.profiles.active']
    println "PROFILE: $activeProfile"
    systemProperty "spring.profiles.active", activeProfile
}

tasks {
    processResources {
        duplicatesStrategy = org.gradle.api.file.DuplicatesStrategy.INCLUDE
    }
}

test {
    useJUnitPlatform()
}

//tasks.named('test') {
//    useJUnitPlatform()
//}
